include(GoogleTest)

function(diy_cc_test name)
  set(options "AUTO")
  set(single_value_args "")
  set(multi_value_args SOURCES LIBRARIES)
  cmake_parse_arguments("" "${options}" "${single_value_args}"
                        "${multi_value_args}" ${ARGN})

  if(_AUTO)
    set(_SOURCES "${name}.cc")
    string(REPLACE "_test" "" auto_library_name ${name})
    list(PREPEND _LIBRARIES ${auto_library_name})
  endif()

  add_executable(${name} "${_SOURCES}")
  target_link_libraries(${name} gmock gtest test_main "${_LIBRARIES}")
  gtest_discover_tests(${name} DISCOVERY_MODE PRE_TEST)
endfunction()

function(diy_cc_library name)
  set(options AUTO STATIC)
  set(single_value_args "")
  set(multi_value_args HEADERS SOURCES LIBRARIES)
  cmake_parse_arguments("" "${options}" "${single_value_args}"
                        "${multi_value_args}" ${ARGN})
  if(_AUTO)
    list(APPEND _HEADERS "${name}.h")
    set(source_file "${name}.cc")
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/${source_file}")
      list(APPEND _SOURCES ${source_file})
    endif()
  endif()
  set(library_type "")
  if(_SOURCES STREQUAL "")
    set(library_type INTERFACE)
  elseif(_STATIC)
    set(library_type STATIC)
  endif()
  add_library(${name} ${library_type})
  target_sources(${name} PRIVATE ${_HEADERS} ${_SOURCES})
  set_property(TARGET ${name} PROPERTY LINKER_LANGUAGE CXX)
  target_link_libraries(${name} ${_LIBRARIES})
endfunction()

function(diy_cc_binary name)
  set(options AUTO)
  set(single_value_args "")
  set(multi_value_args HEADERS SOURCES LIBRARIES)
  cmake_parse_arguments("" "${options}" "${single_value_args}"
                        "${multi_value_args}" ${ARGN})
  if(_AUTO)
    list(APPEND _SOURCES "${name}.cc")
  endif()
  add_executable(${name} ${_SOURCES})
  target_link_libraries(${name} PUBLIC ${_LIBRARIES})
endfunction()
